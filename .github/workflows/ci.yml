---
# Source: https://github.com/hendrikmaus/rust-workflows
#
# Continuous Integration Workflow For Rust
name: CI

# Define the triggers; usually merges to the repository
# default branch and pull-requests
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up toolchain
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        # see https://github.com/actions-rs/toolchain/pull/209
        # uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          target: ${{ matrix.target }}
      - name: Run `cargo fmt`
        uses: actions-rs/cargo@4ff6ec2846f6e7217c1a9b0b503506665f134c4b
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up toolchain
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        # see https://github.com/actions-rs/toolchain/pull/209
        # uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          target: ${{ matrix.target }}
      - name: Install Clippy
        run: rustup component add clippy
      - name: Set up Rust cache
        uses: Swatinem/rust-cache@1232abb8968faf344409165de17cbf9e7f340fd8
      - name: Run `cargo clippy`
        uses: actions-rs/clippy-check@b5b5f21f4797c02da247df37026fcd0a5024aa4d
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -D warnings

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up toolchain
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        # see https://github.com/actions-rs/toolchain/pull/209
        # uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          target: ${{ matrix.target }}
      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v1
      - name: Run `cargo doc`
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --document-private-items --all-features --workspace
        env:
          RUSTDOCFLAGS: -D warnings

  test:
    name: Test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    runs-on: ${{matrix.os}}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up toolchain
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        # see https://github.com/actions-rs/toolchain/pull/209
        # uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          target: ${{ matrix.target }}
      - name: Set up Rust cache
        uses: Swatinem/rust-cache@1232abb8968faf344409165de17cbf9e7f340fd8
      - name: Run `cargo build`
        uses: actions-rs/cargo@4ff6ec2846f6e7217c1a9b0b503506665f134c4b
        with:
          command: build
          args: --all-features
      - name: Reject uncommitted changes
        run: git diff --exit-code
      - name: Run `cargo test`
        uses: actions-rs/cargo@4ff6ec2846f6e7217c1a9b0b503506665f134c4b
        with:
          command: test
          args: --all-features
      - name: Run `export-validator`
        uses: actions-rs/cargo@4ff6ec2846f6e7217c1a9b0b503506665f134c4b
        with:
          command: run
          args: --package export-validator
